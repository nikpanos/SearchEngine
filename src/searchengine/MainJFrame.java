/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package searchengine;

import java.awt.Font;
import java.io.IOException;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.lucene.queryparser.classic.ParseException;

/**
 *
 * @author Nicolas
 */
public class MainJFrame extends javax.swing.JFrame {

    private IndexFiles indexFiles;
    private SearchFiles searchFiles;
    private DefaultTableModel model;
    private final ImageIcon icon = new ImageIcon(getClass().getResource("/searchengine/images/correct.png"));
    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() 
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultsTable = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        createInvertedIndex = new javax.swing.JMenuItem();
        chooseIndexToSearch = new javax.swing.JMenuItem();
        exitProgramm = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.CardLayout());

        jPanel2.setBackground(new java.awt.Color(255, 153, 0));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel1.setText("Επιλεγμένος κατάλογος ευρετηρίου για αναζήτηση:");

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jTextField1.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel2.setText("Ερώτημα κειμένου:");

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/searchengine/images/Search.png"))); // NOI18N
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        resultsTable.setAutoCreateRowSorter(true);
        resultsTable.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        resultsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Αρχεία txt"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        resultsTable.getTableHeader().setFont(new Font("Tahoma",Font.PLAIN,14));
        resultsTable.setRowHeight(20);
        resultsTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        resultsTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(resultsTable);
        if (resultsTable.getColumnModel().getColumnCount() > 0) {
            resultsTable.getColumnModel().getColumn(0).setResizable(false);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 152, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(searchButton))
                .addGap(55, 55, 55)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(jPanel2, "card2");

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/searchengine/images/actions.png"))); // NOI18N
        jMenu1.setText("Ενέργειες");
        jMenu1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        createInvertedIndex.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        createInvertedIndex.setIcon(new javax.swing.ImageIcon(getClass().getResource("/searchengine/images/add.png"))); // NOI18N
        createInvertedIndex.setText("Δημιουργία ευρετηρίου");
        createInvertedIndex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createInvertedIndexActionPerformed(evt);
            }
        });
        jMenu1.add(createInvertedIndex);

        chooseIndexToSearch.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        chooseIndexToSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/searchengine/images/indexSearch.png"))); // NOI18N
        chooseIndexToSearch.setText("Επιλογή αναζήτησης ευρετηρίου");
        chooseIndexToSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseIndexToSearchActionPerformed(evt);
            }
        });
        jMenu1.add(chooseIndexToSearch);

        exitProgramm.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        exitProgramm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/searchengine/images/exit.png"))); // NOI18N
        exitProgramm.setText("Έξοδος");
        exitProgramm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitProgrammActionPerformed(evt);
            }
        });
        jMenu1.add(exitProgramm);

        jMenuBar1.add(jMenu1);

        jMenu2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/searchengine/images/About.png"))); // NOI18N
        jMenu2.setText("About");
        jMenu2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chooseIndexToSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseIndexToSearchActionPerformed
        // TODO add your handling code here:
        indexFiles = new IndexFiles();
        
        JFileChooser chooser = new JFileChooser();
        chooser.setDialogTitle("Επιλέξτε το φάκελο που περιέχει το ευρετήριο στο οποίο θέλετε να γίνει η αναζήτηση");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setAcceptAllFileFilterUsed(false);
        if(chooser.showOpenDialog(chooser)==JFileChooser.APPROVE_OPTION)
        {
             if(indexFiles.checkIfIndexExistInPath(chooser.getSelectedFile().toString())==true)
             {
                 jTextField1.setText(chooser.getSelectedFile().toString());
             }
             else
             {
                 JOptionPane.showMessageDialog(null,"Ο κατάλογος που επιλέξατε δεν περιέχει κάποιο\n ευρετήριο. Παρακαλώ προσπαθήστε ξανά.","Message",JOptionPane.WARNING_MESSAGE);
             }
        }

    }//GEN-LAST:event_chooseIndexToSearchActionPerformed

    private void exitProgrammActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitProgrammActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exitProgrammActionPerformed

    @SuppressWarnings("empty-statement")
    private void createInvertedIndexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createInvertedIndexActionPerformed
        // TODO add your handling code here:
        String[] options = new String[] {"Να διαγραφεί με την αποθήκευση του καινούργιου ευρετηρίου","Να ενημερωθεί από το καινούργιο ευρετήριο και να αποθηκευτεί"};
        
        JFileChooser chooser1 = new JFileChooser();
        chooser1.setDialogTitle("Επιλέξτε το φάκελο με τα αρχεία txt "
                + "για τα οποία θέλετε να κατασκευαστεί το ευρετήριο");
        chooser1.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser1.setAcceptAllFileFilterUsed(false);
        
        if(chooser1.showOpenDialog(chooser1)==JFileChooser.APPROVE_OPTION)
        {
            JFileChooser chooser2 = new JFileChooser();
            chooser2.setDialogTitle("Επιλέξτε το φάκελο στον οποίο θέλετε να αποθηκεύσετε το ευρετήριο");
            chooser2.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            chooser2.setAcceptAllFileFilterUsed(false);
            
            if(chooser2.showSaveDialog(chooser2)==JFileChooser.APPROVE_OPTION)
            {
                indexFiles = new IndexFiles();
                
                if(indexFiles.checkIfIndexExistInPath(chooser2.getSelectedFile().toString())==true)
                {
                    int i = JOptionPane.showOptionDialog(null,"Ο κατάλογος που επιλέχθηκε για την αποθήκευση του ευρετηρίου, περιέχει ήδη ένα παλαιότερο. Το ήδη\n υπάρχων ευρετήριο:","Message", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
                    if( i == 0 )
                    {
                        indexFiles.createIndex(chooser1.getSelectedFile().toString(),chooser2.getSelectedFile().toString(),true);
                        JOptionPane.showMessageDialog(null,"Το ευρετήριο δημιουργήθηκε με επιτυχία!","Inverted Index was created sucessfully!",JOptionPane.INFORMATION_MESSAGE, icon);
                    }
                    else if( i == 1 )
                    {
                        indexFiles.createIndex(chooser1.getSelectedFile().toString(),chooser2.getSelectedFile().toString(),false);
                        JOptionPane.showMessageDialog(null,"Το ευρετήριο ενημερώθηκε με επιτυχία!","Inverted Index was updated sucessfully!",JOptionPane.INFORMATION_MESSAGE, icon);
                    }
                }
                else
                {
                    indexFiles.createIndex(chooser1.getSelectedFile().toString(),chooser2.getSelectedFile().toString(),true);
                }
                int result = JOptionPane.showConfirmDialog(null,"Θα θέλατε να ορίσετε τον κατάλογο που έγινε\n η αποθήκευση του ευρετηρίου ώς επιλεγμένο\n κατάλογο ευρετηρίου για αναζήτηση;",null,JOptionPane.YES_NO_CANCEL_OPTION);
                if(result == JOptionPane.YES_OPTION)
                {
                    jTextField1.setText(chooser2.getSelectedFile().toString());
                }
            }
        }
    }//GEN-LAST:event_createInvertedIndexActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        deleteTableRows();
        if(jTextField1.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Δεν υπάρχει επιλεγμένος κατάλογος ευρετηρίου για αναζήτηση.\nΠαρακαλώ ορίστε το ευρετήριο στο οποίο θέλετε να γίνει η αναζήτηση.","Message",JOptionPane.WARNING_MESSAGE);

        }
        else
        {
            if(jTextField2.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null,"Η αναζήτηση δεν μπορεί να γίνει διότι το ερώτημα κειμένου είναι κενό.","Message",JOptionPane.WARNING_MESSAGE);
            }
            else
            {
                searchFiles = new SearchFiles();
                try
                {
                    model = (DefaultTableModel) resultsTable.getModel();
                    searchFiles.searchTexts(jTextField2.getText(), jTextField1.getText(),model);
                }
                catch(IOException ex)
                {
                    JOptionPane.showMessageDialog(null,ex,"Error",JOptionPane.ERROR);
                }
                catch(ParseException ex)
                {
                    JOptionPane.showMessageDialog(null,ex,"Error",JOptionPane.ERROR);
                }
                
            }
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void deleteTableRows()
    {
        model = (DefaultTableModel) resultsTable.getModel();
        if(model.getRowCount()>0)
        {
            for(int i=model.getRowCount()-1 ; i>-1 ; i--)
            {
                model.removeRow(i);
            }
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem chooseIndexToSearch;
    private javax.swing.JMenuItem createInvertedIndex;
    private javax.swing.JMenuItem exitProgramm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTable resultsTable;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables
}
